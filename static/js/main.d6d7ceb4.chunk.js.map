{"version":3,"sources":["List.tsx","App.tsx","index.tsx"],"names":["List","React","memo","goods","map","good","goodsFromServer","App","useState","isVisible","setIsVisible","setGoods","className","type","onClick","current","reverse","sort","a","b","localeCompare","length","ReactDOM","render","document","getElementById"],"mappings":"0OAMaA,EAAwBC,IAAMC,MACzC,YAAgB,IAAbC,EAAY,EAAZA,MACD,OACE,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,6BAAgBA,GAAPA,WCPbC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAoEaC,EAjEO,WACpB,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0BF,mBAASF,GAAnC,mBAAOH,EAAP,KAAcQ,EAAd,KAeA,OACE,sBAAKC,UAAU,MAAf,WACIH,GAEE,wBACEI,KAAK,SACLC,QAAS,kBAAMJ,GAAa,SAAAK,GAAO,OAAKA,MAF1C,mBAQHN,GAEG,gCACE,cAACT,EAAD,CAAMG,MAAOA,IAEb,wBACEU,KAAK,SACLC,QAhCI,kBACdH,GAAS,SAAAI,GAAO,OAAI,YAAIA,GAASC,cA6BzB,qBAMA,wBACEH,KAAK,SACLC,QAnCe,kBACzBH,GAAS,SAAAI,GAAO,OAAI,YAAIA,GAASE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,UAgCxD,iCAMA,wBACEN,KAAK,SACLC,QAtCE,kBACZH,EAAS,GAAD,OAAKL,KAmCL,mBAMA,wBACEO,KAAK,SACLC,QAzCS,kBACnBH,GAAS,SAAAI,GAAO,OAAI,YAAIA,GAASE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEG,OAASF,EAAEE,cAsCrD,mCClEZC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d6d7ceb4.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  goods: string[]\n};\n\nexport const List: React.FC<Props> = React.memo(\n  ({ goods }) => {\n    return (\n      <ul>\n        {goods.map(good => (\n          <li key={good}>{good}</li>\n        ))}\n      </ul>\n    );\n  },\n);\n","import React, { useState } from 'react';\nimport './App.css';\nimport { List } from './List';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst App: React.FC = () => {\n  const [isVisible, setIsVisible] = useState(false);\n  const [goods, setGoods] = useState(goodsFromServer);\n\n  const reverse = () => (\n    setGoods(current => [...current].reverse())\n  );\n  const sortAlphabetically = () => (\n    setGoods(current => [...current].sort((a, b) => a.localeCompare(b)))\n  );\n  const reset = () => (\n    setGoods([...goodsFromServer])\n  );\n  const sortByLength = () => (\n    setGoods(current => [...current].sort((a, b) => a.length - b.length))\n  );\n\n  return (\n    <div className=\"App\">\n      {!isVisible\n        && (\n          <button\n            type=\"button\"\n            onClick={() => setIsVisible(current => !current)}\n          >\n            Start\n          </button>\n        )}\n\n      {isVisible\n        && (\n          <div>\n            <List goods={goods} />\n\n            <button\n              type=\"button\"\n              onClick={reverse}\n            >\n              Reverse\n            </button>\n            <button\n              type=\"button\"\n              onClick={sortAlphabetically}\n            >\n              Sort alphabetically\n            </button>\n            <button\n              type=\"button\"\n              onClick={reset}\n            >\n              Reset\n            </button>\n            <button\n              type=\"button\"\n              onClick={sortByLength}\n            >\n              Sort by length\n            </button>\n          </div>\n        )}\n\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}